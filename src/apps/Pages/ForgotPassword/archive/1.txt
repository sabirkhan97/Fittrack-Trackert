import React, { useState } from 'react';
import { Form, Input, Button, message, Typography } from 'antd';
import {
  requestReset,
  verifyResetCode,
  resetPassword,
  resetLogin,
} from '@/api/authApi'; // Adjust the import path as needed

const { Title } = Typography;

const ForgotPassword: React.FC = () => {
  const [step, setStep] = useState<'email' | 'verify' | 'action'>('email');
  const [email, setEmail] = useState('');
  const [code, setCode] = useState('');
  const [form] = Form.useForm();

  const handleRequestReset = async (values: any) => {
    try {
      await requestReset(values.email);
      message.success('OTP sent to your email');
      setEmail(values.email);
      setStep('verify');
    } catch (err: any) {
      message.error(err.response?.data?.error || 'Error sending OTP');
    }
  };

  const handleVerifyCode = async (values: any) => {
    try {
      await verifyResetCode(email, values.code);
      message.success('OTP verified');
      setCode(values.code);
      setStep('action');
    } catch (err: any) {
      message.error(err.response?.data?.error || 'Invalid OTP');
    }
  };

  const handleResetPassword = async (values: any) => {
    if (values.newPassword !== values.confirmPassword) {
      message.error('Passwords do not match');
      return;
    }
    try {
      await resetPassword(email, code, values.newPassword);
      message.success('Password reset successfully, please login');
      window.location.href = '/login';
    } catch (err: any) {
      message.error(err.response?.data?.error || 'Error resetting password');
    }
  };

  const handleResetLogin = async () => {
    try {
      const res = await resetLogin(email, code);
      message.success('Logged in successfully');
      localStorage.setItem('token', res.data.token);
      window.location.href = '/dashboard';
    } catch (err: any) {
      message.error(err.response?.data?.error || 'Error logging in');
    }
  };

  return (
    <div style={{ maxWidth: 400, margin: '40px auto', padding: 20, boxShadow: '0 0 10px rgba(0,0,0,0.1)', borderRadius: 8 }}>
      <Title level={3} style={{ textAlign: 'center' }}>Forgot Password</Title>

      {step === 'email' && (
        <Form layout="vertical" onFinish={handleRequestReset}>
          <Form.Item name="email" label="Enter your email" rules={[{ required: true, type: 'email' }]}>
            <Input placeholder="example@gmail.com" />
          </Form.Item>
          <Button type="primary" htmlType="submit" block>Send OTP</Button>
        </Form>
      )}

      {step === 'verify' && (
        <Form layout="vertical" onFinish={handleVerifyCode}>
          <Form.Item name="code" label="Enter the 6-digit OTP sent to your email" rules={[{ required: true }]}>
            <Input placeholder="123456" maxLength={6} />
          </Form.Item>
          <Button type="primary" htmlType="submit" block>Verify OTP</Button>
        </Form>
      )}

      {step === 'action' && (
        <>
          <Button type="primary" onClick={handleResetLogin} block style={{ marginBottom: 12 }}>
            Login Without Password
          </Button>
          <Form layout="vertical" onFinish={handleResetPassword} form={form}>
            <Form.Item
              name="newPassword"
              label="New Password"
              rules={[{ required: true, min: 6 }]}
            >
              <Input.Password placeholder="Enter new password" />
            </Form.Item>
            <Form.Item
              name="confirmPassword"
              label="Confirm New Password"
              rules={[{ required: true, min: 6 }]}
            >
              <Input.Password placeholder="Re-enter new password" />
            </Form.Item>
            <Button type="primary" htmlType="submit" block>Reset Password</Button>
          </Form>
        </>
      )}
    </div>
  );
};

export default ForgotPassword;
