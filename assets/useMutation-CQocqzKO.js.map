{"version":3,"file":"useMutation-CQocqzKO.js","sources":["../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/@tanstack/query-core/build/modern/mutationObserver.js","../../node_modules/@tanstack/react-query/build/modern/IsRestoringProvider.js","../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../node_modules/@tanstack/react-query/build/modern/suspense.js","../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/@tanstack/react-query/build/modern/useQuery.js","../../node_modules/@tanstack/react-query/build/modern/useMutation.js"],"sourcesContent":["// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error(\"experimental_prefetchInRender feature flag is not enabled\")\n      );\n    }\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key);\n        onPropTracked?.(key);\n        return Reflect.get(target, key);\n      }\n    });\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    data = newState.data;\n    let skipSelect = false;\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n        skipSelect = true;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (options.select && data !== void 0 && !skipSelect) {\n      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== \"static\") {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","\"use client\";\n\n// src/IsRestoringProvider.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=IsRestoringProvider.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"@tanstack/query-core\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    const clamp = (value) => value === \"static\" ? value : Math.max(value ?? 1e3, 1e3);\n    const originalStaleTime = defaultedOptions.staleTime;\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => clamp(originalStaleTime(...args)) : clamp(originalStaleTime);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, noop, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./IsRestoringProvider.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const client = useQueryClient(queryClient);\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`\n      );\n    }\n  }\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions);\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport {\n  MutationObserver,\n  noop,\n  notifyManager,\n  shouldThrowError\n} from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map"],"names":["QueryObserver","_a","Subscribable","client","options","__privateAdd","_QueryObserver_instances","_client","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","__privateSet","pendingThenable","__privateGet","shouldFetchOnMount","__privateMethod","executeFetch_fn","updateTimers_fn","shouldFetchOn","clearStaleTimeout_fn","clearRefetchInterval_fn","prevOptions","prevQuery","resolveEnabled","updateQuery_fn","shallowEqualObjects","mounted","shouldFetchOptionally","resolveStaleTime","updateStaleTimeout_fn","nextRefetchInterval","computeRefetchInterval_fn","updateRefetchInterval_fn","query","result","shouldAssignObserverCurrentProperties","onPropTracked","target","key","defaultedOptions","fetchOptions","prevResult","prevResultState","prevResultOptions","queryInitialState","state","newState","isPlaceholderData","data","fetchOnMount","fetchOptionally","fetchState","error","errorUpdatedAt","status","skipSelect","placeholderData","replaceData","selectError","isFetching","isPending","isError","isLoading","hasData","nextResult","isStale","finalizeThenableIfPossible","thenable","recreateThenable","pending","prevThenable","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","notify_fn","promise","noop","staleTime","isServer","isValidTimeout","timeout","timeUntilStale","nextInterval","focusManager","notifyOptions","notifyManager","listener","shouldLoadOnMount","field","value","observer","optimisticResult","MutationObserver","_MutationObserver_instances","_currentMutation","_mutateOptions","updateResult_fn","hashKey","action","variables","getDefaultState","context","_b","_d","_c","_f","_e","_h","_g","IsRestoringContext","React.createContext","useIsRestoring","React.useContext","createValue","isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","React.useEffect","getHasError","throwOnError","suspense","shouldThrowError","ensureSuspenseTimers","clamp","originalStaleTime","args","willFetch","isRestoring","shouldSuspend","fetchOptimistic","useBaseQuery","Observer","queryClient","useQueryClient","isNewCacheEntry","React.useState","shouldSubscribe","React.useSyncExternalStore","React.useCallback","onStoreChange","unsubscribe","useQuery","useMutation","mutate","mutateOptions"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}