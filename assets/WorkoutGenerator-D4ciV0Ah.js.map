{"version":3,"file":"WorkoutGenerator-D4ciV0Ah.js","sources":["../../src/apps/Pages/WorkoutGenerator/WorkoutGenerator.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport { toast } from 'sonner';\nimport { z } from 'zod';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Label } from '@/components/ui/label';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Progress } from '@/components/ui/progress';\nimport { Separator } from '@/components/ui/separator';\nimport { Switch } from '@/components/ui/switch';\nimport { Icons } from '@/components/icons';\nimport dayjs from 'dayjs';\nimport api from '@/api/api';\n\n// Interface for exercise\ninterface Exercise {\n  exercise_name: string;\n  sets: number;\n  reps: number;\n  weight: number;\n  rest: string;\n  rpe?: number;\n  tempo?: string;\n  superset?: string;\n  notes?: string;\n}\n\n// Interface for workout plan\ninterface WorkoutPlan {\n  id: string;\n  date: string;\n  created_at: string;\n  title: string;\n  exercises: Exercise[];\n  notes?: string;\n  prompt?: string;\n  duration?: number;\n  weeklySchedule?: {\n    day1?: string;\n    day2?: string;\n    day3?: string;\n    day4?: string;\n    day5?: string;\n    day6?: string;\n    day7?: string;\n  };\n  bodyMetrics?: {\n    age?: number;\n    sex?: string;\n    height?: string;\n    weight?: string;\n    bodyFat?: string;\n    muscleMass?: string;\n    waistCircumference?: string;\n    hipCircumference?: string;\n    restingHeartRate?: string;\n    bloodPressure?: string;\n  };\n  fitnessProfile?: {\n    experienceLevel?: string;\n    primaryGoal?: string;\n    secondaryGoals?: string[];\n    targetAreas?: string[];\n    avoidAreas?: string[];\n    injuries?: string[];\n    medicalConditions?: string[];\n    currentFitnessLevel?: string;\n    workoutHistory?: string;\n    recentPerformance?: string;\n  };\n  equipment?: {\n    available?: string[];\n    homeGym?: boolean;\n    resistanceBands?: boolean;\n    dumbbells?: boolean;\n    barbell?: boolean;\n    kettlebells?: boolean;\n    pullUpBar?: boolean;\n    cardioMachine?: boolean;\n    weightMachine?: boolean;\n    cableMachine?: boolean;\n    yogaMat?: boolean;\n    stabilityBall?: boolean;\n    foamRoller?: boolean;\n    trx?: boolean;\n    medicineBall?: boolean;\n  };\n  preferences?: {\n    workoutTime?: string;\n    daysPerWeek?: number;\n    intensity?: string;\n    favoriteExercises?: string[];\n    dislikedExercises?: string[];\n    preferredTrainingStyle?: string[];\n    workoutEnvironment?: string;\n    musicPreference?: string;\n    trainingPartner?: boolean;\n    progressTrackingMethod?: string;\n  };\n  nutritionPreferences?: {\n    dietaryRestrictions?: string[];\n    supplements?: string[];\n    mealTiming?: string;\n    hydrationLevel?: string;\n  };\n  recoveryPreferences?: {\n    sleepQuality?: string;\n    sleepDuration?: string;\n    stressLevel?: string;\n    recoveryActivities?: string[];\n    stretchingRoutine?: string;\n  };\n}\n\n// Zod schema for validating workout plan payload\nconst WorkoutPlanPayloadSchema = z.object({\n  date: z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/, 'Date must be in YYYY-MM-DD format'),\n  title: z.string().min(1, 'Title cannot be empty'),\n  exercises: z.array(\n    z.object({\n      exercise_name: z.string().min(1, 'Exercise name cannot be empty'),\n      sets: z.number().min(1, 'Sets must be at least 1'),\n      reps: z.number().min(1, 'Reps must be at least 1'),\n      weight: z.number().min(0, 'Weight cannot be negative'),\n      rest: z.string().optional(),\n      rpe: z.number().optional(),\n      tempo: z.string().optional(),\n      superset: z.string().optional(),\n      notes: z.string().optional(),\n    })\n  ).min(1, 'At least one exercise required'),\n  notes: z.string().optional(),\n  prompt: z.string().optional(),\n  duration: z.number().optional(),\n  weeklySchedule: z.object({\n    day1: z.string().optional(),\n    day2: z.string().optional(),\n    day3: z.string().optional(),\n    day4: z.string().optional(),\n    day5: z.string().optional(),\n    day6: z.string().optional(),\n    day7: z.string().optional(),\n  }).optional(),\n});\n\nexport default function WorkoutGenerator() {\n  const [tabKey, setTabKey] = useState('generate');\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [countdown, setCountdown] = useState(180);\n  const [showLoadingModal, setShowLoadingModal] = useState(false);\n  const [loadingMessages] = useState([\n    \"Designing your workout plan...\",\n    \"Analyzing your goals...\",\n    \"Tailoring exercises...\",\n    \"Optimizing schedule...\",\n    \"Finalizing program...\"\n  ]);\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(0);\n\n  // Form state\n  const [formData, setFormData] = useState({\n    planTitle: '',\n    age: '',\n    sex: '',\n    height: '',\n    weight: '',\n    bodyFat: '',\n    muscleMass: '',\n    waistCircumference: '',\n    hipCircumference: '',\n    restingHeartRate: '',\n    bloodPressure: '',\n    experienceLevel: '',\n    primaryGoal: '',\n    secondaryGoals: [] as string[],\n    targetAreas: [] as string[],\n    avoidAreas: [] as string[],\n    injuries: [] as string[],\n    medicalConditions: [] as string[],\n    currentFitnessLevel: '',\n    workoutHistory: '',\n    recentPerformance: '',\n    availableEquipment: [] as string[],\n    homeGym: false,\n    resistanceBands: false,\n    dumbbells: false,\n    barbell: false,\n    kettlebells: false,\n    pullUpBar: false,\n    cardioMachine: false,\n    weightMachine: false,\n    cableMachine: false,\n    yogaMat: false,\n    stabilityBall: false,\n    foamRoller: false,\n    trx: false,\n    medicineBall: false,\n    workoutTime: '',\n    daysPerWeek: '',\n    intensity: '',\n    favoriteExercises: '',\n    dislikedExercises: '',\n    preferredTrainingStyle: [] as string[],\n    workoutEnvironment: '',\n    musicPreference: '',\n    trainingPartner: false,\n    progressTrackingMethod: '',\n    dietaryRestrictions: [] as string[],\n    supplements: [] as string[],\n    mealTiming: '',\n    hydrationLevel: '',\n    sleepQuality: '',\n    sleepDuration: '',\n    stressLevel: '',\n    recoveryActivities: [] as string[],\n    stretchingRoutine: '',\n    day1: '',\n    day2: '',\n    day3: '',\n    day4: '',\n    day5: '',\n    day6: '',\n    day7: '',\n    additionalNotes: '',\n  });\n\n  const navigate = useNavigate();\n\n  // Fetch saved workout plans\n  const { data: savedPlans, refetch } = useQuery<WorkoutPlan[]>({\n    queryKey: ['workoutPlans'],\n    queryFn: async () => {\n      const res = await api.get('/api/workout-plans/my', {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      });\n      return res.data.plans;\n    },\n    enabled: !!localStorage.getItem('token'),\n  });\n\n  // Generate workout plan mutation\n  const generateWorkout = useMutation({\n    mutationFn: async () => {\n      const prompt = `\nDesign a personalized ${formData.daysPerWeek}-day workout plan titled \"${formData.planTitle}\" for a ${formData.age}-year-old ${formData.sex}.\n\nGoals:\n- Primary: ${formData.primaryGoal}\n- Secondary: ${formData.secondaryGoals.length ? formData.secondaryGoals.join(', ') : 'N/A'}\n\nTarget Muscle Areas:\n- ${formData.targetAreas.length ? formData.targetAreas.join(', ') : 'None'}\n\nInjuries or Areas to Avoid:\n- ${formData.avoidAreas.length ? formData.avoidAreas.join(', ') : 'None'}\n\nAvailable Equipment:\n- ${(() => {\n          const equipmentKeys = [\n            'homeGym', 'resistanceBands', 'dumbbells', 'barbell', 'kettlebells',\n            'pullUpBar', 'cardioMachine', 'weightMachine', 'cableMachine',\n            'yogaMat', 'stabilityBall', 'foamRoller', 'trx', 'medicineBall'\n          ];\n          const selected = equipmentKeys.filter(k => formData[k as keyof typeof formData]);\n          return selected.length ? selected.join(', ') : 'None';\n        })()}\n\nWorkout Preferences:\n- Time per session: ${formData.workoutTime}\n- Intensity: ${formData.intensity}\n- Environment: ${formData.workoutEnvironment}\n\nAdditional Notes:\n- ${formData.additionalNotes || 'None'}\n`;\n\n      setShowLoadingModal(true);\n      setCountdown(180);\n\n      const res = await api.post(\n        '/api/workout-plans',\n        { prompt },\n        { headers: { Authorization: `Bearer ${localStorage.getItem('token')}` } }\n      );\n      return res.data.workoutPlan as WorkoutPlan;\n    },\n    onSuccess: (data) => {\n      toast.success('Workout plan generated!');\n      setWorkoutPlan(data);\n      setShowLoadingModal(false);\n    },\n    onError: (error: any) => {\n      toast.error('Failed to generate plan', {\n        description: error.response?.data?.error || 'Try again later',\n      });\n      setShowLoadingModal(false);\n    },\n  });\n\n  const [workoutPlan, setWorkoutPlan] = useState<WorkoutPlan | null>(null);\n\n  // Countdown effect\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (showLoadingModal && countdown > 0 && !generateWorkout.isSuccess) {\n      timer = setTimeout(() => {\n        setCountdown(countdown - 1);\n        if (countdown % 36 === 0) {\n          setCurrentMessageIndex((prev) =>\n            prev === loadingMessages.length - 1 ? 0 : prev + 1\n          );\n        }\n      }, 1000);\n    } else if (countdown === 0 || generateWorkout.isSuccess) {\n      setShowLoadingModal(false);\n    }\n    return () => clearTimeout(timer);\n  }, [countdown, showLoadingModal, loadingMessages, generateWorkout.isSuccess]);\n\n  // Save workout plan mutation\n  const saveWorkoutPlan = useMutation({\n    mutationFn: async (plan: WorkoutPlan) => {\n      const payload = WorkoutPlanPayloadSchema.parse({\n        date: plan.date,\n        title: plan.title || `Workout Plan ${dayjs(plan.date).format('MMM D, YYYY')}`,\n        exercises: plan.exercises.map((exercise) => ({\n          exercise_name: exercise.exercise_name.trim(),\n          sets: exercise.sets,\n          reps: exercise.reps,\n          weight: exercise.weight,\n          rest: exercise.rest?.trim(),\n          rpe: exercise.rpe,\n          tempo: exercise.tempo?.trim(),\n          superset: exercise.superset?.trim(),\n          notes: exercise.notes?.trim(),\n        })),\n        notes: plan.notes?.trim(),\n        prompt: plan.prompt?.trim(),\n        duration: plan.duration,\n        weeklySchedule: plan.weeklySchedule,\n      });\n\n      const res = await api.post(\n        '/api/workout-plans/save',\n        payload,\n        { headers: { Authorization: `Bearer ${localStorage.getItem('token')}` } }\n      );\n      return res.data;\n    },\n    onSuccess: () => {\n      toast.success('Workout plan saved!');\n      refetch();\n      setTabKey('saved');\n    },\n    onError: (error: any) => {\n      const errorMessage =\n        error instanceof z.ZodError\n          ? error.errors.map((e: any) => e.message).join(', ')\n          : error.response?.data?.error || 'An unexpected error occurred';\n      toast.error('Failed to save plan', {\n        description: errorMessage,\n      });\n    },\n  });\n\n  // Delete workout plan mutation\n  const deleteWorkoutPlan = useMutation({\n    mutationFn: async (planId: string) => {\n      await api.delete(`/api/workout-plans/${planId}`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      });\n    },\n    onSuccess: () => {\n      toast.success('Workout plan deleted');\n      refetch();\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.error || 'Failed to delete plan');\n    },\n  });\n\n  const handleInputChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement> | { name: string; value: any }\n  ) => {\n    if ('target' in e) {\n      const { name, value, type } = e.target;\n      const checked = type === 'checkbox' ? (e.target as HTMLInputElement).checked : undefined;\n      setFormData({\n        ...formData,\n        [name]: type === 'checkbox' ? checked : value,\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [e.name]: e.value,\n      });\n    }\n  };\n\n  const toggleArrayField = (field: keyof typeof formData, value: string) => {\n    setFormData((prev) => {\n      const current = prev[field] as string[];\n      if (current.includes(value)) {\n        return { ...prev, [field]: current.filter((item) => item !== value) };\n      }\n      return { ...prev, [field]: [...current, value] };\n    });\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    toast.success('Logged out successfully');\n    navigate('/login');\n  };\n\n  // Options for select inputs\n  const goalOptions = [\n    'Muscle Gain', 'Fat Loss', 'Strength', 'Endurance', 'Mobility',\n    'Rehabilitation', 'Sports Performance', 'General Fitness'\n  ];\n\n  const targetAreaOptions = [\n    'Chest', 'Back', 'Shoulders', 'Arms', 'Legs', 'Core', 'Glutes', 'Full Body'\n  ];\n\n  const experienceLevels = ['Beginner', 'Intermediate', 'Advanced'];\n\n  const intensityLevels = ['Low', 'Moderate', 'High'];\n\n  const workoutTimes = ['Morning', 'Afternoon', 'Evening'];\n\n  const trainingStyles = [\n    'Bodybuilding', 'Powerlifting', 'CrossFit', 'Calisthenics', 'Functional'\n  ];\n\n  const workoutEnvironments = ['Gym', 'Home', 'Outdoor'];\n\n  const musicPreferences = ['Upbeat', 'Rock', 'Hip-Hop', 'None'];\n\n  const trackingMethods = ['App', 'Journal', 'Spreadsheet'];\n\n  const dietaryRestrictions = ['Vegetarian', 'Vegan', 'Gluten-Free', 'Dairy-Free'];\n\n  const supplements = ['Protein', 'Creatine', 'Pre-Workout', 'None'];\n\n  const recoveryActivities = ['Foam Rolling', 'Massage', 'Yoga', 'Stretching'];\n\n  const sleepQualities = ['Poor', 'Fair', 'Good'];\n\n  const stressLevels = ['Low', 'Moderate', 'High'];\n\n  return (\n    <div className=\"min-h-screen \">\n\n      <div className=\"container px-4 py-8\">\n        <Tabs value={tabKey} onValueChange={setTabKey} className=\"w-full\">\n          <TabsList className=\"flex w-full max-w-md mx-auto mb-8 bg-gray-100 p-1.5 rounded-xl border border-gray-200 shadow-inner\">\n            <TabsTrigger\n              value=\"generate\"\n              className=\"w-full py-2.5 text-sm font-medium transition-all duration-200\n             data-[state=active]:bg-white data-[state=active]:text-emerald-600\n             data-[state=active]:shadow-sm data-[state=active]:ring-1 ring-emerald-100\n             rounded-lg hover:text-emerald-600\"\n            >\n              <div className=\"flex items-center justify-center gap-2\">\n                <Icons.bolt className=\"h-4 w-4\" />\n                Workout Generator\n              </div>\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"saved\"\n              className=\"w-full py-2.5 text-sm font-medium transition-all duration-200\n             data-[state=active]:bg-white data-[state=active]:text-emerald-600\n             data-[state=active]:shadow-sm data-[state=active]:ring-1 ring-emerald-100\n             rounded-lg hover:text-emerald-600\"\n            >\n              <div className=\"flex items-center justify-center gap-2\">\n                <Icons.bookmark className=\"h-4 w-4\" />\n                My Plans\n              </div>\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"generate\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3 }}\n            >\n              <Card className=\"border-0 shadow-lg overflow-hidden\">\n                <CardHeader className=\"bg-gradient-to-br from-indigo-700 to-violet-600 text-white relative overflow-hidden group p-8 rounded-t-[2rem] hover:shadow-lg transition-shadow duration-300\">\n                  {/* Enhanced curved corners */}\n                  <div className=\"absolute top-0 left-0 right-0 h-8 bg-inherit\">\n                    <div className=\"absolute -top-8 left-0 w-8 h-8 bg-white/10 rounded-br-full transition-all duration-500 group-hover:bg-white/20\" />\n                    <div className=\"absolute -top-8 right-0 w-8 h-8 bg-white/10 rounded-bl-full transition-all duration-500 group-hover:bg-white/20\" />\n                  </div>\n\n                  {/* Dynamic particle background */}\n                  <div className=\"absolute inset-0 overflow-hidden\">\n                    <div className=\"absolute top-1/4 left-1/3 w-2 h-2 rounded-full bg-white/20 animate-float-delay\" />\n                    <div className=\"absolute top-1/3 right-1/4 w-1.5 h-1.5 rounded-full bg-white/15 animate-float\" />\n                    <div className=\"absolute bottom-1/4 left-1/5 w-3 h-3 rounded-full bg-white/25 animate-float-delay-slow\" />\n                  </div>\n\n                  {/* Content with enhanced typography */}\n                  <div className=\"relative z-10 space-y-2 mt-2\">\n                    <CardTitle className=\"text-3xl md:text-4xl font-bold tracking-tight leading-tight drop-shadow-md\">\n                      <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-white to-indigo-100 hover:bg-gradient-to-r hover:from-white hover:to-indigo-200 transition-all duration-500\">\n                        Create Your Workout Plan\n                      </span>\n                    </CardTitle>\n\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"h-1.5 w-6 bg-white/40 rounded-full animate-pulse hover:bg-white/60 transition-colors duration-300\" />\n                      <CardDescription className=\"text-indigo-100/90 text-lg font-light tracking-wide flex items-center hover:text-white transition-colors duration-300\">\n                        <Icons.sparkle className=\"h-4 w-4 mr-2 animate-float hover:animate-spin\" />\n                        <span className=\"hover:translate-x-1 transition-transform duration-300\">\n                          Fill in details for a personalized workout\n                        </span>\n                      </CardDescription>\n                    </div>\n                  </div>\n\n                  {/* Enhanced animated border */}\n                  <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-gradient-to-r from-transparent via-white/60 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-700 [background-size:200%_auto] group-hover:animate-shine\" />\n                </CardHeader>\n\n                <CardContent className=\"p-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div className=\"space-y-4\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"planTitle\">Plan Title</Label>\n                        <Input\n                          id=\"planTitle\"\n                          name=\"planTitle\"\n                          value={formData.planTitle}\n                          onChange={handleInputChange}\n                          placeholder=\"e.g., Summer Shred\"\n                          disabled={generateWorkout.isPending}\n                          className=\"bg-white\"\n                        />\n                      </div>\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <div className=\"space-y-2\">\n                          <Label htmlFor=\"age\">Age</Label>\n                          <Input\n                            id=\"age\"\n                            name=\"age\"\n                            type=\"number\"\n                            value={formData.age}\n                            onChange={handleInputChange}\n                            placeholder=\"Your age\"\n                            disabled={generateWorkout.isPending}\n                            className=\"bg-white\"\n                          />\n                        </div>\n                        <div className=\"space-y-2\">\n                          <Label htmlFor=\"sex\">Sex</Label>\n                          <Select\n                            name=\"sex\"\n                            value={formData.sex}\n                            onValueChange={(value) => handleInputChange({ name: 'sex', value })}\n                            disabled={generateWorkout.isPending}\n                          >\n                            <SelectTrigger className=\"bg-white\">\n                              <SelectValue placeholder=\"Select sex\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"Male\">Male</SelectItem>\n                              <SelectItem value=\"Female\">Female</SelectItem>\n                              <SelectItem value=\"Other\">Other</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </div>\n                      </div>\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <div className=\"space-y-2\">\n                          <Label htmlFor=\"height\">Height (cm)</Label>\n                          <Input\n                            id=\"height\"\n                            name=\"height\"\n                            type=\"number\"\n                            value={formData.height}\n                            onChange={handleInputChange}\n                            placeholder=\"Your height\"\n                            disabled={generateWorkout.isPending}\n                            className=\"bg-white\"\n                          />\n                        </div>\n                        <div className=\"space-y-2\">\n                          <Label htmlFor=\"weight\">Weight (kg)</Label>\n                          <Input\n                            id=\"weight\"\n                            name=\"weight\"\n                            type=\"number\"\n                            value={formData.weight}\n                            onChange={handleInputChange}\n                            placeholder=\"Your weight\"\n                            disabled={generateWorkout.isPending}\n                            className=\"bg-white\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label>Primary Goal</Label>\n                        <Select\n                          name=\"primaryGoal\"\n                          value={formData.primaryGoal}\n                          onValueChange={(value) => handleInputChange({ name: 'primaryGoal', value })}\n                          disabled={generateWorkout.isPending}\n                        >\n                          <SelectTrigger className=\"bg-white\">\n                            <SelectValue placeholder=\"Select goal\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {goalOptions.map((goal) => (\n                              <SelectItem key={goal} value={goal.toLowerCase().replace(' ', '-')}>{goal}</SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label>Secondary Goals</Label>\n                        <div className=\"grid grid-cols-2 gap-2\">\n                          {goalOptions.map((goal) => (\n                            <div key={goal} className=\"flex items-center space-x-2\">\n                              <Checkbox\n                                id={goal}\n                                checked={formData.secondaryGoals.includes(goal)}\n                                onCheckedChange={() => toggleArrayField('secondaryGoals', goal)}\n                                disabled={generateWorkout.isPending}\n                              />\n                              <label htmlFor={goal} className=\"text-sm\">{goal}</label>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label>Target Areas</Label>\n                        <div className=\"grid grid-cols-2 gap-2\">\n                          {targetAreaOptions.map((area) => (\n                            <div key={area} className=\"flex items-center space-x-2\">\n                              <Checkbox\n                                id={area}\n                                checked={formData.targetAreas.includes(area)}\n                                onCheckedChange={() => toggleArrayField('targetAreas', area)}\n                                disabled={generateWorkout.isPending}\n                              />\n                              <label htmlFor={area} className=\"text-sm\">{area}</label>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label>Areas to Avoid</Label>\n                        <div className=\"grid grid-cols-2 gap-2\">\n                          {targetAreaOptions.map((area) => (\n                            <div key={area} className=\"flex items-center space-x-2\">\n                              <Checkbox\n                                id={`avoid-${area}`}\n                                checked={formData.avoidAreas.includes(area)}\n                                onCheckedChange={() => toggleArrayField('avoidAreas', area)}\n                                disabled={generateWorkout.isPending}\n                              />\n                              <label htmlFor={`avoid-${area}`} className=\"text-sm\">{area}</label>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-4\">\n                      <div className=\"space-y-2\">\n                        <Label>Experience Level</Label>\n                        <Select\n                          name=\"experienceLevel\"\n                          value={formData.experienceLevel}\n                          onValueChange={(value) => handleInputChange({ name: 'experienceLevel', value })}\n                          disabled={generateWorkout.isPending}\n                        >\n                          <SelectTrigger className=\"bg-white\">\n                            <SelectValue placeholder=\"Select level\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {experienceLevels.map((level) => (\n                              <SelectItem key={level} value={level.toLowerCase()}>{level}</SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label>Workout Time</Label>\n                        <Select\n                          name=\"workoutTime\"\n                          value={formData.workoutTime}\n                          onValueChange={(value) => handleInputChange({ name: 'workoutTime', value })}\n                          disabled={generateWorkout.isPending}\n                        >\n                          <SelectTrigger className=\"bg-white\">\n                            <SelectValue placeholder=\"Select time\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {workoutTimes.map((time) => (\n                              <SelectItem key={time} value={time.toLowerCase()}>{time}</SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label>Days Per Week</Label>\n                        <Input\n                          name=\"daysPerWeek\"\n                          type=\"number\"\n                          min=\"1\"\n                          max=\"7\"\n                          value={formData.daysPerWeek}\n                          onChange={handleInputChange}\n                          placeholder=\"1-7\"\n                          disabled={generateWorkout.isPending}\n                          className=\"bg-white\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label>Intensity</Label>\n                        <Select\n                          name=\"intensity\"\n                          value={formData.intensity}\n                          onValueChange={(value) => handleInputChange({ name: 'intensity', value })}\n                          disabled={generateWorkout.isPending}\n                        >\n                          <SelectTrigger className=\"bg-white\">\n                            <SelectValue placeholder=\"Select intensity\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {intensityLevels.map((level) => (\n                              <SelectItem key={level} value={level.toLowerCase()}>{level}</SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label>Favorite Exercises</Label>\n                        <Input\n                          name=\"favoriteExercises\"\n                          value={formData.favoriteExercises}\n                          onChange={handleInputChange}\n                          placeholder=\"e.g., Squats, Pull-ups\"\n                          disabled={generateWorkout.isPending}\n                          className=\"bg-white\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label>Exercises to Avoid</Label>\n                        <Input\n                          name=\"dislikedExercises\"\n                          value={formData.dislikedExercises}\n                          onChange={handleInputChange}\n                          placeholder=\"e.g., Burpees\"\n                          disabled={generateWorkout.isPending}\n                          className=\"bg-white\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label>Training Style</Label>\n                        <div className=\"flex flex-wrap gap-2\">\n                          {trainingStyles.map((style) => (\n                            <Button\n                              key={style}\n                              variant={formData.preferredTrainingStyle.includes(style) ? 'default' : 'outline'}\n                              size=\"sm\"\n                              onClick={() => toggleArrayField('preferredTrainingStyle', style)}\n                              disabled={generateWorkout.isPending}\n                              className={cn(\n                                \"rounded-full\",\n                                formData.preferredTrainingStyle.includes(style) ? \"bg-emerald-600\" : \"bg-white\"\n                              )}\n                            >\n                              {style}\n                            </Button>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label>Workout Environment</Label>\n                        <Select\n                          name=\"workoutEnvironment\"\n                          value={formData.workoutEnvironment}\n                          onValueChange={(value) => handleInputChange({ name: 'workoutEnvironment', value })}\n                          disabled={generateWorkout.isPending}\n                        >\n                          <SelectTrigger className=\"bg-white\">\n                            <SelectValue placeholder=\"Select environment\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {workoutEnvironments.map((env) => (\n                              <SelectItem key={env} value={env.toLowerCase()}>{env}</SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <Label className=\"text-lg font-medium\">Advanced Options</Label>\n                      <Switch\n                        checked={showAdvanced}\n                        onCheckedChange={setShowAdvanced}\n                        disabled={generateWorkout.isPending}\n                        className=\"data-[state=checked]:bg-emerald-600\"\n                      />\n                    </div>\n\n                    {showAdvanced && (\n                      <motion.div\n                        initial={{ height: 0, opacity: 0 }}\n                        animate={{ height: 'auto', opacity: 1 }}\n                        exit={{ height: 0, opacity: 0 }}\n                        transition={{ duration: 0.3 }}\n                        className=\"mt-4 space-y-4 overflow-hidden\"\n                      >\n                        <Separator className=\"my-4\" />\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"bodyFat\">Body Fat %</Label>\n                            <Input\n                              id=\"bodyFat\"\n                              name=\"bodyFat\"\n                              type=\"number\"\n                              value={formData.bodyFat}\n                              onChange={handleInputChange}\n                              placeholder=\"Optional\"\n                              disabled={generateWorkout.isPending}\n                              className=\"bg-white\"\n                            />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"muscleMass\">Muscle Mass (kg)</Label>\n                            <Input\n                              id=\"muscleMass\"\n                              name=\"muscleMass\"\n                              type=\"number\"\n                              value={formData.muscleMass}\n                              onChange={handleInputChange}\n                              placeholder=\"Optional\"\n                              disabled={generateWorkout.isPending}\n                              className=\"bg-white\"\n                            />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"waistCircumference\">Waist (cm)</Label>\n                            <Input\n                              id=\"waistCircumference\"\n                              name=\"waistCircumference\"\n                              type=\"number\"\n                              value={formData.waistCircumference}\n                              onChange={handleInputChange}\n                              placeholder=\"Optional\"\n                              disabled={generateWorkout.isPending}\n                              className=\"bg-white\"\n                            />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"hipCircumference\">Hip (cm)</Label>\n                            <Input\n                              id=\"hipCircumference\"\n                              name=\"hipCircumference\"\n                              type=\"number\"\n                              value={formData.hipCircumference}\n                              onChange={handleInputChange}\n                              placeholder=\"Optional\"\n                              disabled={generateWorkout.isPending}\n                              className=\"bg-white\"\n                            />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"restingHeartRate\">Heart Rate (bpm)</Label>\n                            <Input\n                              id=\"restingHeartRate\"\n                              name=\"restingHeartRate\"\n                              type=\"number\"\n                              value={formData.restingHeartRate}\n                              onChange={handleInputChange}\n                              placeholder=\"Optional\"\n                              disabled={generateWorkout.isPending}\n                              className=\"bg-white\"\n                            />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label htmlFor=\"bloodPressure\">Blood Pressure</Label>\n                            <Input\n                              id=\"bloodPressure\"\n                              name=\"bloodPressure\"\n                              value={formData.bloodPressure}\n                              onChange={handleInputChange}\n                              placeholder=\"e.g., 120/80\"\n                              disabled={generateWorkout.isPending}\n                              className=\"bg-white\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"space-y-2\">\n                          <Label>Injuries</Label>\n                          <Input\n                            name=\"injuries\"\n                            value={formData.injuries.join(', ')}\n                            onChange={(e) => setFormData({ ...formData, injuries: e.target.value.split(',').map(i => i.trim()) })}\n                            placeholder=\"e.g., Lower back pain\"\n                            disabled={generateWorkout.isPending}\n                            className=\"bg-white\"\n                          />\n                        </div>\n                        <div className=\"space-y-2\">\n                          <Label>Medical Conditions</Label>\n                          <Input\n                            name=\"medicalConditions\"\n                            value={formData.medicalConditions.join(', ')}\n                            onChange={(e) => setFormData({ ...formData, medicalConditions: e.target.value.split(',').map(i => i.trim()) })}\n                            placeholder=\"e.g., Hypertension\"\n                            disabled={generateWorkout.isPending}\n                            className=\"bg-white\"\n                          />\n                        </div>\n                        <div className=\"space-y-2\">\n                          <Label>Fitness Level</Label>\n                          <Textarea\n                            name=\"currentFitnessLevel\"\n                            value={formData.currentFitnessLevel}\n                            onChange={handleInputChange}\n                            placeholder=\"Current fitness capabilities\"\n                            disabled={generateWorkout.isPending}\n                            className=\"bg-white min-h-[100px]\"\n                          />\n                        </div>\n                      </motion.div>\n                    )}\n                  </div>\n\n                  <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div className=\"space-y-4\">\n                      <div className=\"space-y-2\">\n                        <Label>Equipment Available</Label>\n                        <div className=\"grid grid-cols-2 gap-2\">\n                          {[\n                            { id: 'homeGym', label: 'Home Gym' },\n                            { id: 'resistanceBands', label: 'Resistance Bands' },\n                            { id: 'dumbbells', label: 'Dumbbells' },\n                            { id: 'barbell', label: 'Barbell' },\n                            { id: 'kettlebells', label: 'Kettlebells' },\n                            { id: 'pullUpBar', label: 'Pull-up Bar' },\n                            { id: 'cardioMachine', label: 'Cardio Machine' },\n                            { id: 'weightMachine', label: 'Weight Machine' },\n                            { id: 'cableMachine', label: 'Cable Machine' },\n                            { id: 'yogaMat', label: 'Yoga Mat' },\n                            { id: 'stabilityBall', label: 'Stability Ball' },\n                            { id: 'foamRoller', label: 'Foam Roller' },\n                            { id: 'trx', label: 'TRX' },\n                            { id: 'medicineBall', label: 'Medicine Ball' },\n                          ].map(({ id, label }) => (\n                            <div key={id} className=\"flex items-center space-x-2\">\n                              <Checkbox\n                                id={id}\n                                checked={formData[id as keyof typeof formData] as boolean}\n                                onCheckedChange={(checked) => handleInputChange({ name: id, value: checked })}\n                                disabled={generateWorkout.isPending}\n                              />\n                              <label htmlFor={id} className=\"text-sm\">{label}</label>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"space-y-4\">\n                      <div className=\"space-y-2\">\n                        <Label>Additional Notes</Label>\n                        <Textarea\n                          name=\"additionalNotes\"\n                          value={formData.additionalNotes}\n                          onChange={handleInputChange}\n                          placeholder=\"Specific goals or preferences...\"\n                          className=\"min-h-[100px] bg-white\"\n                          disabled={generateWorkout.isPending}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-8 flex justify-center\">\n                    <Button\n                      size=\"lg\"\n                      onClick={() => generateWorkout.mutate()}\n                      disabled={generateWorkout.isPending || !formData.age || !formData.sex || !formData.primaryGoal}\n                      className=\"px-8 py-6 text-lg bg-gradient-to-r from-emerald-600 to-teal-600\"\n                    >\n                      {generateWorkout.isPending ? (\n                        <div className=\"flex items-center gap-2\">\n                          <Icons.spinner className=\"h-5 w-5 animate-spin\" />\n                          <span>Generating...</span>\n                        </div>\n                      ) : (\n                        'Generate Workout'\n                      )}\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {workoutPlan && (\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.3 }}\n                  className=\"mt-6\"\n                >\n                  <Card className=\"border border-gray-200 shadow-sm overflow-hidden hover:shadow-md transition-shadow\">\n                    {/* Header */}\n                    <CardHeader className=\"bg-white p-5 border-b border-gray-100\">\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <CardTitle className=\"text-xl font-semibold text-gray-900\">\n                            {workoutPlan.title}\n                          </CardTitle>\n                          <CardDescription className=\"text-gray-500 text-sm mt-1 flex items-center\">\n                            <Icons.calendar className=\"h-3.5 w-3.5 mr-1.5\" />\n                            Generated {dayjs(workoutPlan.created_at).format('MMM D, YYYY')}\n                          </CardDescription>\n                        </div>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => setWorkoutPlan(null)}\n                          className=\"text-gray-500 hover:text-gray-700\"\n                        >\n                          <Icons.x className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </CardHeader>\n\n                    {/* Content */}\n                    <CardContent className=\"p-5 bg-gray-50/50\">\n                      {/* Weekly Schedule */}\n                      {workoutPlan.weeklySchedule && Object.values(workoutPlan.weeklySchedule).some(val => val) && (\n                        <div className=\"mb-6\">\n                          <h3 className=\"text-sm font-medium text-gray-700 mb-3 flex items-center\">\n                            <Icons.calendarDays className=\"h-4 w-4 mr-2 text-emerald-500\" />\n                            WEEKLY SCHEDULE\n                          </h3>\n                          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-3\">\n                            {['day1', 'day2', 'day3', 'day4', 'day5', 'day6', 'day7'].map((day, idx) => {\n                              const dayValue = workoutPlan.weeklySchedule?.[day as keyof typeof workoutPlan.weeklySchedule];\n                              if (!dayValue) return null;\n                              return (\n                                <div key={day} className=\"bg-white p-3 rounded-lg border border-gray-100 shadow-xs\">\n                                  <h4 className=\"text-xs font-semibold text-gray-500 uppercase tracking-wider\">\n                                    {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'][idx]}\n                                  </h4>\n                                  <p className=\"text-sm text-gray-800 mt-1\">{dayValue}</p>\n                                </div>\n                              );\n                            })}\n                          </div>\n                        </div>\n                      )}\n\n                      {/* Exercises */}\n                      <div className=\"space-y-5\">\n                        {workoutPlan.exercises.map((exercise, index) => (\n                          <div key={index} className=\"bg-white p-4 rounded-lg border border-gray-100 shadow-xs\">\n                            <div className=\"flex items-start gap-3\">\n                              <div className=\"bg-emerald-100/50 p-2 rounded-full\">\n                                <Icons.dumbbell />\n                              </div>\n                              <div className=\"flex-1\">\n                                <h4 className=\"font-medium text-gray-900\">{exercise.exercise_name}</h4>\n\n                                {/* Exercise Details */}\n                                <div className=\"mt-2 grid grid-cols-2 sm:grid-cols-3 gap-2 text-sm\">\n                                  <div className=\"flex items-center text-gray-600\">\n                                    <Icons.repeat className=\"h-3.5 w-3.5 mr-1.5 text-gray-400\" />\n                                    {exercise.sets}×{exercise.reps}\n                                  </div>\n                                  {exercise.weight > 0 && (\n                                    <div className=\"flex items-center text-gray-600\">\n                                      <Icons.weight className=\"h-3.5 w-3.5 mr-1.5 text-gray-400\" />\n                                      {exercise.weight} kg\n                                    </div>\n                                  )}\n                                  {exercise.rest && (\n                                    <div className=\"flex items-center text-gray-600\">\n                                      <Icons.clock className=\"h-3.5 w-3.5 mr-1.5 text-gray-400\" />\n                                      Rest: {exercise.rest}\n                                    </div>\n                                  )}\n                                  {exercise.rpe && (\n                                    <div className=\"flex items-center text-gray-600\">\n                                      <Icons.gauge className=\"h-3.5 w-3.5 mr-1.5 text-gray-400\" />\n                                      RPE: {exercise.rpe}\n                                    </div>\n                                  )}\n                                  {exercise.tempo && (\n                                    <div className=\"flex items-center text-gray-600\">\n                                      <Icons.timer className=\"h-3.5 w-3.5 mr-1.5 text-gray-400\" />\n                                      Tempo: {exercise.tempo}\n                                    </div>\n                                  )}\n                                </div>\n\n                                {/* Notes and Supersets */}\n                                {(exercise.notes || exercise.superset) && (\n                                  <div className=\"mt-3 space-y-2\">\n                                    {exercise.superset && (\n                                      <div className=\"flex items-start text-sm text-emerald-700 bg-emerald-50/50 px-3 py-2 rounded\">\n                                        <Icons.link className=\"h-3.5 w-3.5 mr-1.5 mt-0.5 flex-shrink-0\" />\n                                        <span>Superset with {exercise.superset}</span>\n                                      </div>\n                                    )}\n                                    {exercise.notes && (\n                                      <div className=\"text-sm text-gray-700 bg-gray-50 px-3 py-2 rounded border-l-2 border-emerald-300\">\n                                        {exercise.notes}\n                                      </div>\n                                    )}\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n\n                      {/* Trainer Notes */}\n                      {workoutPlan.notes && (\n                        <div className=\"mt-6 bg-white p-4 rounded-lg border border-gray-100 shadow-xs\">\n                          <h4 className=\"text-sm font-medium text-gray-700 mb-2 flex items-center\">\n                            <Icons.clipboard className=\"h-4 w-4 mr-2 text-emerald-500\" />\n                            TRAINER NOTES\n                          </h4>\n                          <p className=\"text-gray-700\">{workoutPlan.notes}</p>\n                        </div>\n                      )}\n\n                      {/* Actions */}\n                      <div className=\"mt-6 flex justify-end gap-3\">\n                        <Button\n                          variant=\"outline\"\n                          onClick={() => setWorkoutPlan(null)}\n                          disabled={saveWorkoutPlan.isPending}\n                          className=\"border-gray-300 hover:bg-gray-50\"\n                        >\n                          Close\n                        </Button>\n                        <Button\n                          onClick={() => saveWorkoutPlan.mutate(workoutPlan)}\n                          disabled={saveWorkoutPlan.isPending || !workoutPlan}\n                          className=\"bg-emerald-600 hover:bg-emerald-700\"\n                        >\n                          {saveWorkoutPlan.isPending ? (\n                            <Icons.spinner className=\"h-4 w-4 animate-spin mr-2\" />\n                          ) : (\n                            <Icons.save className=\"h-4 w-4 mr-2\" />\n                          )}\n                          Save Plan\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              )}\n            </motion.div>\n          </TabsContent>\n\n          <TabsContent value=\"saved\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"space-y-6\"\n            >\n              {savedPlans && savedPlans.length > 0 ? (\n                savedPlans.map((plan) => (\n                  <Card key={plan.id} className=\"border-0 shadow-lg overflow-hidden\">\n                    <CardHeader className=\"bg-gradient-to-br from-indigo-700 to-violet-600 text-white relative overflow-hidden p-6 rounded-t-3xl\">\n                      {/* Floating particles */}\n                      <div className=\"absolute inset-0 overflow-hidden\">\n                        <div className=\"absolute top-1/4 left-1/3 w-1.5 h-1.5 rounded-full bg-white/20 animate-float\" />\n                        <div className=\"absolute top-1/2 right-1/4 w-2 h-2 rounded-full bg-white/15 animate-float-delay\" />\n                      </div>\n\n                      {/* Content */}\n                      <div className=\"relative z-10\">\n                        <div className=\"flex justify-between items-start\">\n                          <div className=\"space-y-1\">\n                            <CardTitle className=\"text-2xl font-bold tracking-tight\">\n                              {plan.title}\n                            </CardTitle>\n                            <CardDescription className=\"text-indigo-100/90 flex items-center\">\n                              <Icons.calendar className=\"h-4 w-4 mr-2\" />\n                              Created {dayjs(plan.created_at).format('MMM D, YYYY')}\n                            </CardDescription>\n                          </div>\n\n                          {/* Minimal delete button */}\n                          <button\n                            onClick={() => deleteWorkoutPlan.mutate(plan.id)}\n                            className=\"p-1.5 rounded-full hover:bg-white/10 transition-colors\"\n                          >\n                            <Icons.trash className=\"h-4 w-4 text-white/80 hover:text-white\" />\n                          </button>\n                        </div>\n                      </div>\n\n                      {/* Animated bottom border */}\n                      <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-gradient-to-r from-transparent via-white/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n                    </CardHeader>\n            <CardContent className=\"p-6 bg-white\">\n  {/* Weekly Schedule */}\n  {plan.weeklySchedule && Object.values(plan.weeklySchedule).some(val => val) && (\n    <div className=\"mb-8\">\n      <div className=\"flex items-center gap-2 mb-4\">\n        <div className=\"bg-emerald-100 p-1.5 rounded-lg\">\n          <Icons.calendarDays className=\"h-5 w-5 text-emerald-600\" />\n        </div>\n        <h3 className=\"text-lg font-medium text-gray-800\">Weekly Schedule</h3>\n      </div>\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3\">\n        {['day1', 'day2', 'day3', 'day4', 'day5', 'day6', 'day7'].map((day, idx) => {\n          const dayValue = plan.weeklySchedule?.[day as keyof typeof plan.weeklySchedule];\n          if (!dayValue) return null;\n          return (\n            <div key={day} className=\"border border-gray-200 p-3 rounded-lg\">\n              <h4 className=\"text-sm font-medium text-emerald-600\">\n                {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'][idx]}\n              </h4>\n              <p className=\"text-sm text-gray-600 mt-1\">{dayValue}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  )}\n\n  {/* Exercises */}\n  <div className=\"space-y-6\">\n    {plan.exercises.map((exercise, index) => (\n      <div key={index} className=\"border-b border-gray-100 pb-6 last:border-0\">\n        <div className=\"flex items-start gap-4\">\n          <div className=\"bg-emerald-100 p-2 rounded-lg\">\n            <Icons.dumbbell />\n          </div>\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-800 mb-2\">\n              {exercise.exercise_name}\n            </h3>\n            \n            {/* Exercise Details */}\n            <div className=\"flex flex-wrap gap-3 mb-3\">\n              <div className=\"flex items-center text-sm text-gray-600\">\n                <Icons.repeat className=\"h-4 w-4 mr-1.5 text-gray-400\" />\n                {exercise.sets} × {exercise.reps}\n              </div>\n              \n              {exercise.weight > 0 && (\n                <div className=\"flex items-center text-sm text-gray-600\">\n                  <Icons.weight className=\"h-4 w-4 mr-1.5 text-gray-400\" />\n                  {exercise.weight} kg\n                </div>\n              )}\n              \n              {exercise.rest && (\n                <div className=\"flex items-center text-sm text-gray-600\">\n                  <Icons.clock className=\"h-4 w-4 mr-1.5 text-gray-400\" />\n                  {exercise.rest}\n                </div>\n              )}\n            </div>\n            \n            {/* Notes */}\n            {exercise.notes && (\n              <div className=\"bg-gray-50 p-3 rounded-lg text-sm text-gray-600\">\n                {exercise.notes}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    ))}\n  </div>\n\n  {/* Trainer Notes */}\n  {plan.notes && (\n    <div className=\"mt-8 bg-gray-50 p-4 rounded-lg\">\n      <h4 className=\"text-sm font-medium text-gray-500 mb-2\">Trainer Notes</h4>\n      <p className=\"text-gray-700\">{plan.notes}</p>\n    </div>\n  )}\n</CardContent>\n                  </Card>\n                ))\n              ) : (\n                <div className=\"text-center py-12\">\n                  <div className=\"mx-auto h-24 w-24 rounded-full bg-emerald-50 flex items-center justify-center mb-4\">\n                    <Icons.fileText className=\"h-12 w-12 text-emerald-600\" />\n                  </div>\n                  <h3 className=\"mt-2 text-xl font-semibold text-gray-900\">No saved plans</h3>\n                  <p className=\"mt-2 text-gray-600\">Generate a workout plan to save it here</p>\n                  <Button\n                    onClick={() => setTabKey('generate')}\n                    className=\"mt-6 bg-emerald-600\"\n                  >\n                    Create Plan\n                  </Button>\n                </div>\n              )}\n            </motion.div>\n          </TabsContent>\n        </Tabs>\n      </div>\n\n      <AnimatePresence>\n        {showLoadingModal && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 z-50 bg-black/80 backdrop-blur-sm flex items-center justify-center p-4\"\n          >\n            <motion.div\n              initial={{ scale: 0.9, y: 20 }}\n              animate={{ scale: 1, y: 0 }}\n              className=\"bg-white rounded-xl shadow-2xl max-w-md w-full p-6 text-center\"\n            >\n              <div className=\"relative h-32 w-32 mx-auto mb-6\">\n                <motion.div\n                  animate={{ rotate: 360 }}\n                  transition={{ duration: 4, repeat: Infinity, ease: \"linear\" }}\n                  className=\"absolute inset-0\"\n                >\n                  <Icons.loader className=\"h-full w-full text-emerald-200\" />\n                </motion.div>\n                <div className=\"absolute inset-4 flex items-center justify-center\">\n                  <Icons.dumbbell />\n                </div>\n              </div>\n              <p>{loadingMessages[currentMessageIndex]}</p>\n              <div className=\"space-y-4 mt-4\">\n                <div className=\"flex justify-between text-sm text-gray-500\">\n                  <span>Time remaining:</span>\n                  <span className=\"font-medium text-emerald-600\">\n                    {Math.floor(countdown / 60)}:{String(countdown % 60).padStart(2, '0')}\n                  </span>\n                </div>\n                <Progress\n                  value={100 - (countdown / 180 * 100)}\n                  className=\"h-2 bg-gray-200\"\n                />\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n"],"names":["WorkoutPlanPayloadSchema","z.object","z.string","z.array","z.number","WorkoutGenerator","tabKey","setTabKey","useState","showAdvanced","setShowAdvanced","countdown","setCountdown","showLoadingModal","setShowLoadingModal","loadingMessages","currentMessageIndex","setCurrentMessageIndex","formData","setFormData","useNavigate","savedPlans","refetch","useQuery","api","generateWorkout","useMutation","prompt","selected","k","data","toast","setWorkoutPlan","error","_b","_a","workoutPlan","useEffect","timer","prev","saveWorkoutPlan","plan","payload","dayjs","exercise","_c","_d","errorMessage","z.ZodError","e","deleteWorkoutPlan","planId","handleInputChange","name","value","type","checked","toggleArrayField","field","current","item","goalOptions","targetAreaOptions","experienceLevels","intensityLevels","workoutTimes","trainingStyles","workoutEnvironments","jsxs","jsx","Tabs","TabsList","TabsTrigger","Icons","TabsContent","motion","Card","CardHeader","CardTitle","CardDescription","CardContent","Label","Input","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","goal","Checkbox","area","level","time","style","Button","cn","env","Switch","Separator","i","Textarea","id","label","val","day","idx","dayValue","index","AnimatePresence","Progress"],"mappings":"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"}